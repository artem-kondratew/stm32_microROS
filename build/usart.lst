ARM GAS  /tmp/cc9cZ5f2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_USART3_UART_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_USART3_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_tx;
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/cc9cZ5f2.s 			page 2


  31:Core/Src/usart.c **** /* USART3 init function */
  32:Core/Src/usart.c **** 
  33:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
  34:Core/Src/usart.c **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE END USART3_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 1 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****   /* USER CODE END USART3_Init 1 */
  43:Core/Src/usart.c ****   huart3.Instance = USART3;
  38              		.loc 1 43 3 view .LVU1
  39              		.loc 1 43 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  44:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
  43              		.loc 1 44 3 is_stmt 1 view .LVU3
  44              		.loc 1 44 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  45:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 45 3 is_stmt 1 view .LVU5
  48              		.loc 1 45 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  46:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 46 3 is_stmt 1 view .LVU7
  52              		.loc 1 46 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  47:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 47 3 is_stmt 1 view .LVU9
  55              		.loc 1 47 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  48:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 48 3 is_stmt 1 view .LVU11
  58              		.loc 1 48 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  49:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 49 3 is_stmt 1 view .LVU13
  62              		.loc 1 49 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  50:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 50 3 is_stmt 1 view .LVU15
  65              		.loc 1 50 28 is_stmt 0 view .LVU16
ARM GAS  /tmp/cc9cZ5f2.s 			page 3


  66 001c C361     		str	r3, [r0, #28]
  51:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
  67              		.loc 1 51 3 is_stmt 1 view .LVU17
  68              		.loc 1 51 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 51 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  52:Core/Src/usart.c ****   {
  53:Core/Src/usart.c ****     Error_Handler();
  54:Core/Src/usart.c ****   }
  55:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c ****   /* USER CODE END USART3_Init 2 */
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** }
  74              		.loc 1 59 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  53:Core/Src/usart.c ****   }
  77              		.loc 1 53 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 59 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	.LANCHOR0
  86 0030 00480040 		.word	1073760256
  87              		.cfi_endproc
  88              	.LFE130:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	HAL_UART_MspInit:
  98              	.LVL2:
  99              	.LFB131:
  60:Core/Src/usart.c **** 
  61:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  62:Core/Src/usart.c **** {
 100              		.loc 1 62 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		.loc 1 62 1 is_stmt 0 view .LVU24
 105 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 28
 108              		.cfi_offset 4, -28
 109              		.cfi_offset 5, -24
 110              		.cfi_offset 6, -20
 111              		.cfi_offset 7, -16
ARM GAS  /tmp/cc9cZ5f2.s 			page 4


 112              		.cfi_offset 8, -12
 113              		.cfi_offset 9, -8
 114              		.cfi_offset 14, -4
 115 0004 89B0     		sub	sp, sp, #36
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 64
  63:Core/Src/usart.c **** 
  64:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 118              		.loc 1 64 3 is_stmt 1 view .LVU25
 119              		.loc 1 64 20 is_stmt 0 view .LVU26
 120 0006 0023     		movs	r3, #0
 121 0008 0393     		str	r3, [sp, #12]
 122 000a 0493     		str	r3, [sp, #16]
 123 000c 0593     		str	r3, [sp, #20]
 124 000e 0693     		str	r3, [sp, #24]
 125 0010 0793     		str	r3, [sp, #28]
  65:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 126              		.loc 1 65 3 is_stmt 1 view .LVU27
 127              		.loc 1 65 16 is_stmt 0 view .LVU28
 128 0012 0268     		ldr	r2, [r0]
 129              		.loc 1 65 5 view .LVU29
 130 0014 434B     		ldr	r3, .L15
 131 0016 9A42     		cmp	r2, r3
 132 0018 02D0     		beq	.L12
 133              	.LVL3:
 134              	.L7:
  66:Core/Src/usart.c ****   {
  67:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
  70:Core/Src/usart.c ****     /* USART3 clock enable */
  71:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
  72:Core/Src/usart.c **** 
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  74:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
  75:Core/Src/usart.c ****     /**USART3 GPIO Configuration
  76:Core/Src/usart.c ****     PB11     ------> USART3_RX
  77:Core/Src/usart.c ****     PD8     ------> USART3_TX
  78:Core/Src/usart.c ****     */
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  82:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  83:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
  84:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
  87:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  88:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  89:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  90:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
  91:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c ****     /* USART3 DMA Init */
  94:Core/Src/usart.c ****     /* USART3_RX Init */
  95:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Stream1;
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
ARM GAS  /tmp/cc9cZ5f2.s 			page 5


  97:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
  98:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
  99:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 104:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 105:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 106:Core/Src/usart.c ****     {
 107:Core/Src/usart.c ****       Error_Handler();
 108:Core/Src/usart.c ****     }
 109:Core/Src/usart.c **** 
 110:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 111:Core/Src/usart.c **** 
 112:Core/Src/usart.c ****     /* USART3_TX Init */
 113:Core/Src/usart.c ****     hdma_usart3_tx.Instance = DMA1_Stream3;
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 115:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 116:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 122:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 123:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 124:Core/Src/usart.c ****     {
 125:Core/Src/usart.c ****       Error_Handler();
 126:Core/Src/usart.c ****     }
 127:Core/Src/usart.c **** 
 128:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart3_tx);
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****     /* USART3 interrupt Init */
 131:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 132:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 133:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 134:Core/Src/usart.c **** 
 135:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 136:Core/Src/usart.c ****   }
 137:Core/Src/usart.c **** }
 135              		.loc 1 137 1 view .LVU30
 136 001a 09B0     		add	sp, sp, #36
 137              	.LCFI3:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 28
 140              		@ sp needed
 141 001c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 142              	.LVL4:
 143              	.L12:
 144              	.LCFI4:
 145              		.cfi_restore_state
 146              		.loc 1 137 1 view .LVU31
 147 0020 0446     		mov	r4, r0
  71:Core/Src/usart.c **** 
 148              		.loc 1 71 5 is_stmt 1 view .LVU32
 149              	.LBB2:
ARM GAS  /tmp/cc9cZ5f2.s 			page 6


  71:Core/Src/usart.c **** 
 150              		.loc 1 71 5 view .LVU33
 151 0022 0025     		movs	r5, #0
 152 0024 0095     		str	r5, [sp]
  71:Core/Src/usart.c **** 
 153              		.loc 1 71 5 view .LVU34
 154 0026 03F5F833 		add	r3, r3, #126976
 155 002a 1A6C     		ldr	r2, [r3, #64]
 156 002c 42F48022 		orr	r2, r2, #262144
 157 0030 1A64     		str	r2, [r3, #64]
  71:Core/Src/usart.c **** 
 158              		.loc 1 71 5 view .LVU35
 159 0032 1A6C     		ldr	r2, [r3, #64]
 160 0034 02F48022 		and	r2, r2, #262144
 161 0038 0092     		str	r2, [sp]
  71:Core/Src/usart.c **** 
 162              		.loc 1 71 5 view .LVU36
 163 003a 009A     		ldr	r2, [sp]
 164              	.LBE2:
  71:Core/Src/usart.c **** 
 165              		.loc 1 71 5 view .LVU37
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 166              		.loc 1 73 5 view .LVU38
 167              	.LBB3:
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 168              		.loc 1 73 5 view .LVU39
 169 003c 0195     		str	r5, [sp, #4]
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 170              		.loc 1 73 5 view .LVU40
 171 003e 1A6B     		ldr	r2, [r3, #48]
 172 0040 42F00202 		orr	r2, r2, #2
 173 0044 1A63     		str	r2, [r3, #48]
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 174              		.loc 1 73 5 view .LVU41
 175 0046 1A6B     		ldr	r2, [r3, #48]
 176 0048 02F00202 		and	r2, r2, #2
 177 004c 0192     		str	r2, [sp, #4]
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 178              		.loc 1 73 5 view .LVU42
 179 004e 019A     		ldr	r2, [sp, #4]
 180              	.LBE3:
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 181              		.loc 1 73 5 view .LVU43
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 182              		.loc 1 74 5 view .LVU44
 183              	.LBB4:
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 184              		.loc 1 74 5 view .LVU45
 185 0050 0295     		str	r5, [sp, #8]
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 186              		.loc 1 74 5 view .LVU46
 187 0052 1A6B     		ldr	r2, [r3, #48]
 188 0054 42F00802 		orr	r2, r2, #8
 189 0058 1A63     		str	r2, [r3, #48]
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 190              		.loc 1 74 5 view .LVU47
 191 005a 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/cc9cZ5f2.s 			page 7


 192 005c 03F00803 		and	r3, r3, #8
 193 0060 0293     		str	r3, [sp, #8]
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 194              		.loc 1 74 5 view .LVU48
 195 0062 029B     		ldr	r3, [sp, #8]
 196              	.LBE4:
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 197              		.loc 1 74 5 view .LVU49
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 198              		.loc 1 79 5 view .LVU50
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 199              		.loc 1 79 25 is_stmt 0 view .LVU51
 200 0064 4FF40063 		mov	r3, #2048
 201 0068 0393     		str	r3, [sp, #12]
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 202              		.loc 1 80 5 is_stmt 1 view .LVU52
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 80 26 is_stmt 0 view .LVU53
 204 006a 4FF00209 		mov	r9, #2
 205 006e CDF81090 		str	r9, [sp, #16]
  81:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 206              		.loc 1 81 5 is_stmt 1 view .LVU54
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 207              		.loc 1 82 5 view .LVU55
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 208              		.loc 1 82 27 is_stmt 0 view .LVU56
 209 0072 4FF00308 		mov	r8, #3
 210 0076 CDF81880 		str	r8, [sp, #24]
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 211              		.loc 1 83 5 is_stmt 1 view .LVU57
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 212              		.loc 1 83 31 is_stmt 0 view .LVU58
 213 007a 0727     		movs	r7, #7
 214 007c 0797     		str	r7, [sp, #28]
  84:Core/Src/usart.c **** 
 215              		.loc 1 84 5 is_stmt 1 view .LVU59
 216 007e 03A9     		add	r1, sp, #12
 217 0080 2948     		ldr	r0, .L15+4
 218              	.LVL5:
  84:Core/Src/usart.c **** 
 219              		.loc 1 84 5 is_stmt 0 view .LVU60
 220 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL6:
  86:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 222              		.loc 1 86 5 is_stmt 1 view .LVU61
  86:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 223              		.loc 1 86 25 is_stmt 0 view .LVU62
 224 0086 4FF48076 		mov	r6, #256
 225 008a 0396     		str	r6, [sp, #12]
  87:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 87 5 is_stmt 1 view .LVU63
  87:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 227              		.loc 1 87 26 is_stmt 0 view .LVU64
 228 008c CDF81090 		str	r9, [sp, #16]
  88:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 229              		.loc 1 88 5 is_stmt 1 view .LVU65
  88:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  /tmp/cc9cZ5f2.s 			page 8


 230              		.loc 1 88 26 is_stmt 0 view .LVU66
 231 0090 0595     		str	r5, [sp, #20]
  89:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 232              		.loc 1 89 5 is_stmt 1 view .LVU67
  89:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 233              		.loc 1 89 27 is_stmt 0 view .LVU68
 234 0092 CDF81880 		str	r8, [sp, #24]
  90:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 235              		.loc 1 90 5 is_stmt 1 view .LVU69
  90:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 236              		.loc 1 90 31 is_stmt 0 view .LVU70
 237 0096 0797     		str	r7, [sp, #28]
  91:Core/Src/usart.c **** 
 238              		.loc 1 91 5 is_stmt 1 view .LVU71
 239 0098 03A9     		add	r1, sp, #12
 240 009a 2448     		ldr	r0, .L15+8
 241 009c FFF7FEFF 		bl	HAL_GPIO_Init
 242              	.LVL7:
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 243              		.loc 1 95 5 view .LVU72
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 244              		.loc 1 95 29 is_stmt 0 view .LVU73
 245 00a0 2348     		ldr	r0, .L15+12
 246 00a2 244B     		ldr	r3, .L15+16
 247 00a4 0360     		str	r3, [r0]
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 248              		.loc 1 96 5 is_stmt 1 view .LVU74
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 249              		.loc 1 96 33 is_stmt 0 view .LVU75
 250 00a6 4FF00063 		mov	r3, #134217728
 251 00aa 4360     		str	r3, [r0, #4]
  97:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 252              		.loc 1 97 5 is_stmt 1 view .LVU76
  97:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 253              		.loc 1 97 35 is_stmt 0 view .LVU77
 254 00ac 8560     		str	r5, [r0, #8]
  98:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 255              		.loc 1 98 5 is_stmt 1 view .LVU78
  98:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 256              		.loc 1 98 35 is_stmt 0 view .LVU79
 257 00ae C560     		str	r5, [r0, #12]
  99:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 258              		.loc 1 99 5 is_stmt 1 view .LVU80
  99:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 259              		.loc 1 99 32 is_stmt 0 view .LVU81
 260 00b0 4FF48063 		mov	r3, #1024
 261 00b4 0361     		str	r3, [r0, #16]
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 262              		.loc 1 100 5 is_stmt 1 view .LVU82
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 263              		.loc 1 100 45 is_stmt 0 view .LVU83
 264 00b6 4561     		str	r5, [r0, #20]
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 265              		.loc 1 101 5 is_stmt 1 view .LVU84
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 266              		.loc 1 101 42 is_stmt 0 view .LVU85
 267 00b8 8561     		str	r5, [r0, #24]
ARM GAS  /tmp/cc9cZ5f2.s 			page 9


 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 268              		.loc 1 102 5 is_stmt 1 view .LVU86
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 269              		.loc 1 102 30 is_stmt 0 view .LVU87
 270 00ba C661     		str	r6, [r0, #28]
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 271              		.loc 1 103 5 is_stmt 1 view .LVU88
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 272              		.loc 1 103 34 is_stmt 0 view .LVU89
 273 00bc 4FF44033 		mov	r3, #196608
 274 00c0 0362     		str	r3, [r0, #32]
 104:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 275              		.loc 1 104 5 is_stmt 1 view .LVU90
 104:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 276              		.loc 1 104 34 is_stmt 0 view .LVU91
 277 00c2 4562     		str	r5, [r0, #36]
 105:Core/Src/usart.c ****     {
 278              		.loc 1 105 5 is_stmt 1 view .LVU92
 105:Core/Src/usart.c ****     {
 279              		.loc 1 105 9 is_stmt 0 view .LVU93
 280 00c4 FFF7FEFF 		bl	HAL_DMA_Init
 281              	.LVL8:
 105:Core/Src/usart.c ****     {
 282              		.loc 1 105 8 view .LVU94
 283 00c8 28BB     		cbnz	r0, .L13
 284              	.L9:
 110:Core/Src/usart.c **** 
 285              		.loc 1 110 5 is_stmt 1 view .LVU95
 110:Core/Src/usart.c **** 
 286              		.loc 1 110 5 view .LVU96
 287 00ca 194B     		ldr	r3, .L15+12
 288 00cc A363     		str	r3, [r4, #56]
 110:Core/Src/usart.c **** 
 289              		.loc 1 110 5 view .LVU97
 290 00ce 9C63     		str	r4, [r3, #56]
 110:Core/Src/usart.c **** 
 291              		.loc 1 110 5 view .LVU98
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 292              		.loc 1 113 5 view .LVU99
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 293              		.loc 1 113 29 is_stmt 0 view .LVU100
 294 00d0 1948     		ldr	r0, .L15+20
 295 00d2 1A4B     		ldr	r3, .L15+24
 296 00d4 0360     		str	r3, [r0]
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 297              		.loc 1 114 5 is_stmt 1 view .LVU101
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 298              		.loc 1 114 33 is_stmt 0 view .LVU102
 299 00d6 4FF00063 		mov	r3, #134217728
 300 00da 4360     		str	r3, [r0, #4]
 115:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 301              		.loc 1 115 5 is_stmt 1 view .LVU103
 115:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 302              		.loc 1 115 35 is_stmt 0 view .LVU104
 303 00dc 4023     		movs	r3, #64
 304 00de 8360     		str	r3, [r0, #8]
 116:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
ARM GAS  /tmp/cc9cZ5f2.s 			page 10


 305              		.loc 1 116 5 is_stmt 1 view .LVU105
 116:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 306              		.loc 1 116 35 is_stmt 0 view .LVU106
 307 00e0 0023     		movs	r3, #0
 308 00e2 C360     		str	r3, [r0, #12]
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 309              		.loc 1 117 5 is_stmt 1 view .LVU107
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 310              		.loc 1 117 32 is_stmt 0 view .LVU108
 311 00e4 4FF48062 		mov	r2, #1024
 312 00e8 0261     		str	r2, [r0, #16]
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 313              		.loc 1 118 5 is_stmt 1 view .LVU109
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 314              		.loc 1 118 45 is_stmt 0 view .LVU110
 315 00ea 4361     		str	r3, [r0, #20]
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 316              		.loc 1 119 5 is_stmt 1 view .LVU111
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 317              		.loc 1 119 42 is_stmt 0 view .LVU112
 318 00ec 8361     		str	r3, [r0, #24]
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 319              		.loc 1 120 5 is_stmt 1 view .LVU113
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 320              		.loc 1 120 30 is_stmt 0 view .LVU114
 321 00ee C361     		str	r3, [r0, #28]
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 322              		.loc 1 121 5 is_stmt 1 view .LVU115
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 323              		.loc 1 121 34 is_stmt 0 view .LVU116
 324 00f0 4FF44032 		mov	r2, #196608
 325 00f4 0262     		str	r2, [r0, #32]
 122:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 326              		.loc 1 122 5 is_stmt 1 view .LVU117
 122:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 327              		.loc 1 122 34 is_stmt 0 view .LVU118
 328 00f6 4362     		str	r3, [r0, #36]
 123:Core/Src/usart.c ****     {
 329              		.loc 1 123 5 is_stmt 1 view .LVU119
 123:Core/Src/usart.c ****     {
 330              		.loc 1 123 9 is_stmt 0 view .LVU120
 331 00f8 FFF7FEFF 		bl	HAL_DMA_Init
 332              	.LVL9:
 123:Core/Src/usart.c ****     {
 333              		.loc 1 123 8 view .LVU121
 334 00fc 70B9     		cbnz	r0, .L14
 335              	.L10:
 128:Core/Src/usart.c **** 
 336              		.loc 1 128 5 is_stmt 1 view .LVU122
 128:Core/Src/usart.c **** 
 337              		.loc 1 128 5 view .LVU123
 338 00fe 0E4B     		ldr	r3, .L15+20
 339 0100 6363     		str	r3, [r4, #52]
 128:Core/Src/usart.c **** 
 340              		.loc 1 128 5 view .LVU124
 341 0102 9C63     		str	r4, [r3, #56]
 128:Core/Src/usart.c **** 
ARM GAS  /tmp/cc9cZ5f2.s 			page 11


 342              		.loc 1 128 5 view .LVU125
 131:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 343              		.loc 1 131 5 view .LVU126
 344 0104 0022     		movs	r2, #0
 345 0106 0521     		movs	r1, #5
 346 0108 2720     		movs	r0, #39
 347 010a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 348              	.LVL10:
 132:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 349              		.loc 1 132 5 view .LVU127
 350 010e 2720     		movs	r0, #39
 351 0110 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 352              	.LVL11:
 353              		.loc 1 137 1 is_stmt 0 view .LVU128
 354 0114 81E7     		b	.L7
 355              	.L13:
 107:Core/Src/usart.c ****     }
 356              		.loc 1 107 7 is_stmt 1 view .LVU129
 357 0116 FFF7FEFF 		bl	Error_Handler
 358              	.LVL12:
 359 011a D6E7     		b	.L9
 360              	.L14:
 125:Core/Src/usart.c ****     }
 361              		.loc 1 125 7 view .LVU130
 362 011c FFF7FEFF 		bl	Error_Handler
 363              	.LVL13:
 364 0120 EDE7     		b	.L10
 365              	.L16:
 366 0122 00BF     		.align	2
 367              	.L15:
 368 0124 00480040 		.word	1073760256
 369 0128 00040240 		.word	1073873920
 370 012c 000C0240 		.word	1073875968
 371 0130 00000000 		.word	.LANCHOR1
 372 0134 28600240 		.word	1073897512
 373 0138 00000000 		.word	.LANCHOR2
 374 013c 58600240 		.word	1073897560
 375              		.cfi_endproc
 376              	.LFE131:
 378              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 379              		.align	1
 380              		.global	HAL_UART_MspDeInit
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 385              	HAL_UART_MspDeInit:
 386              	.LVL14:
 387              	.LFB132:
 138:Core/Src/usart.c **** 
 139:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 140:Core/Src/usart.c **** {
 388              		.loc 1 140 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 141:Core/Src/usart.c **** 
 142:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
ARM GAS  /tmp/cc9cZ5f2.s 			page 12


 392              		.loc 1 142 3 view .LVU132
 393              		.loc 1 142 16 is_stmt 0 view .LVU133
 394 0000 0268     		ldr	r2, [r0]
 395              		.loc 1 142 5 view .LVU134
 396 0002 0F4B     		ldr	r3, .L24
 397 0004 9A42     		cmp	r2, r3
 398 0006 00D0     		beq	.L23
 399 0008 7047     		bx	lr
 400              	.L23:
 140:Core/Src/usart.c **** 
 401              		.loc 1 140 1 view .LVU135
 402 000a 10B5     		push	{r4, lr}
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 4, -8
 406              		.cfi_offset 14, -4
 407 000c 0446     		mov	r4, r0
 143:Core/Src/usart.c ****   {
 144:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 145:Core/Src/usart.c **** 
 146:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 147:Core/Src/usart.c ****     /* Peripheral clock disable */
 148:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 408              		.loc 1 148 5 is_stmt 1 view .LVU136
 409 000e 0D4A     		ldr	r2, .L24+4
 410 0010 136C     		ldr	r3, [r2, #64]
 411 0012 23F48023 		bic	r3, r3, #262144
 412 0016 1364     		str	r3, [r2, #64]
 149:Core/Src/usart.c **** 
 150:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 151:Core/Src/usart.c ****     PB11     ------> USART3_RX
 152:Core/Src/usart.c ****     PD8     ------> USART3_TX
 153:Core/Src/usart.c ****     */
 154:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_11);
 413              		.loc 1 154 5 view .LVU137
 414 0018 4FF40061 		mov	r1, #2048
 415 001c 0A48     		ldr	r0, .L24+8
 416              	.LVL15:
 417              		.loc 1 154 5 is_stmt 0 view .LVU138
 418 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 419              	.LVL16:
 155:Core/Src/usart.c **** 
 156:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOD, GPIO_PIN_8);
 420              		.loc 1 156 5 is_stmt 1 view .LVU139
 421 0022 4FF48071 		mov	r1, #256
 422 0026 0948     		ldr	r0, .L24+12
 423 0028 FFF7FEFF 		bl	HAL_GPIO_DeInit
 424              	.LVL17:
 157:Core/Src/usart.c **** 
 158:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 159:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 425              		.loc 1 159 5 view .LVU140
 426 002c A06B     		ldr	r0, [r4, #56]
 427 002e FFF7FEFF 		bl	HAL_DMA_DeInit
 428              	.LVL18:
 160:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 429              		.loc 1 160 5 view .LVU141
ARM GAS  /tmp/cc9cZ5f2.s 			page 13


 430 0032 606B     		ldr	r0, [r4, #52]
 431 0034 FFF7FEFF 		bl	HAL_DMA_DeInit
 432              	.LVL19:
 161:Core/Src/usart.c **** 
 162:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 163:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 433              		.loc 1 163 5 view .LVU142
 434 0038 2720     		movs	r0, #39
 435 003a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 436              	.LVL20:
 164:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 165:Core/Src/usart.c **** 
 166:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 167:Core/Src/usart.c ****   }
 168:Core/Src/usart.c **** }
 437              		.loc 1 168 1 is_stmt 0 view .LVU143
 438 003e 10BD     		pop	{r4, pc}
 439              	.LVL21:
 440              	.L25:
 441              		.loc 1 168 1 view .LVU144
 442              		.align	2
 443              	.L24:
 444 0040 00480040 		.word	1073760256
 445 0044 00380240 		.word	1073887232
 446 0048 00040240 		.word	1073873920
 447 004c 000C0240 		.word	1073875968
 448              		.cfi_endproc
 449              	.LFE132:
 451              		.global	hdma_usart3_tx
 452              		.global	hdma_usart3_rx
 453              		.global	huart3
 454              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 455              		.align	2
 456              		.set	.LANCHOR1,. + 0
 459              	hdma_usart3_rx:
 460 0000 00000000 		.space	96
 460      00000000 
 460      00000000 
 460      00000000 
 460      00000000 
 461              		.section	.bss.hdma_usart3_tx,"aw",%nobits
 462              		.align	2
 463              		.set	.LANCHOR2,. + 0
 466              	hdma_usart3_tx:
 467 0000 00000000 		.space	96
 467      00000000 
 467      00000000 
 467      00000000 
 467      00000000 
 468              		.section	.bss.huart3,"aw",%nobits
 469              		.align	2
 470              		.set	.LANCHOR0,. + 0
 473              	huart3:
 474 0000 00000000 		.space	68
 474      00000000 
 474      00000000 
 474      00000000 
ARM GAS  /tmp/cc9cZ5f2.s 			page 14


 474      00000000 
 475              		.text
 476              	.Letext0:
 477              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 478              		.file 3 "/opt/st/stm32cubeide_1.12.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 479              		.file 4 "/opt/st/stm32cubeide_1.12.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 480              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 481              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 482              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 483              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 484              		.file 9 "Core/Inc/usart.h"
 485              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 486              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/cc9cZ5f2.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cc9cZ5f2.s:20     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cc9cZ5f2.s:26     .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cc9cZ5f2.s:85     .text.MX_USART3_UART_Init:000000000000002c $d
     /tmp/cc9cZ5f2.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc9cZ5f2.s:97     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc9cZ5f2.s:368    .text.HAL_UART_MspInit:0000000000000124 $d
     /tmp/cc9cZ5f2.s:379    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc9cZ5f2.s:385    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc9cZ5f2.s:444    .text.HAL_UART_MspDeInit:0000000000000040 $d
     /tmp/cc9cZ5f2.s:466    .bss.hdma_usart3_tx:0000000000000000 hdma_usart3_tx
     /tmp/cc9cZ5f2.s:459    .bss.hdma_usart3_rx:0000000000000000 hdma_usart3_rx
     /tmp/cc9cZ5f2.s:473    .bss.huart3:0000000000000000 huart3
     /tmp/cc9cZ5f2.s:455    .bss.hdma_usart3_rx:0000000000000000 $d
     /tmp/cc9cZ5f2.s:462    .bss.hdma_usart3_tx:0000000000000000 $d
     /tmp/cc9cZ5f2.s:469    .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
