ARM GAS  /tmp/ccxC5xij.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART3_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART3_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_tx;
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/ccxC5xij.s 			page 2


  31:Core/Src/usart.c **** /* USART3 init function */
  32:Core/Src/usart.c **** 
  33:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
  34:Core/Src/usart.c **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE END USART3_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 1 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****   /* USER CODE END USART3_Init 1 */
  43:Core/Src/usart.c ****   huart3.Instance = USART3;
  38              		.loc 1 43 3 view .LVU1
  39              		.loc 1 43 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  44:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
  43              		.loc 1 44 3 is_stmt 1 view .LVU3
  44              		.loc 1 44 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  45:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 45 3 is_stmt 1 view .LVU5
  48              		.loc 1 45 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  46:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 46 3 is_stmt 1 view .LVU7
  52              		.loc 1 46 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  47:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 47 3 is_stmt 1 view .LVU9
  55              		.loc 1 47 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  48:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 48 3 is_stmt 1 view .LVU11
  58              		.loc 1 48 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  49:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 49 3 is_stmt 1 view .LVU13
  62              		.loc 1 49 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  50:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 50 3 is_stmt 1 view .LVU15
  65              		.loc 1 50 28 is_stmt 0 view .LVU16
ARM GAS  /tmp/ccxC5xij.s 			page 3


  66 001c C361     		str	r3, [r0, #28]
  51:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
  67              		.loc 1 51 3 is_stmt 1 view .LVU17
  68              		.loc 1 51 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 51 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  52:Core/Src/usart.c ****   {
  53:Core/Src/usart.c ****     Error_Handler();
  54:Core/Src/usart.c ****   }
  55:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c ****   /* USER CODE END USART3_Init 2 */
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** }
  74              		.loc 1 59 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  53:Core/Src/usart.c ****   }
  77              		.loc 1 53 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 59 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	.LANCHOR0
  86 0030 00480040 		.word	1073760256
  87              		.cfi_endproc
  88              	.LFE130:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_UART_MspInit:
  99              	.LVL2:
 100              	.LFB131:
  60:Core/Src/usart.c **** 
  61:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  62:Core/Src/usart.c **** {
 101              		.loc 1 62 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		.loc 1 62 1 is_stmt 0 view .LVU24
 106 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 28
 109              		.cfi_offset 4, -28
 110              		.cfi_offset 5, -24
 111              		.cfi_offset 6, -20
ARM GAS  /tmp/ccxC5xij.s 			page 4


 112              		.cfi_offset 7, -16
 113              		.cfi_offset 8, -12
 114              		.cfi_offset 9, -8
 115              		.cfi_offset 14, -4
 116 0004 89B0     		sub	sp, sp, #36
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 64
  63:Core/Src/usart.c **** 
  64:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 64 3 is_stmt 1 view .LVU25
 120              		.loc 1 64 20 is_stmt 0 view .LVU26
 121 0006 0023     		movs	r3, #0
 122 0008 0393     		str	r3, [sp, #12]
 123 000a 0493     		str	r3, [sp, #16]
 124 000c 0593     		str	r3, [sp, #20]
 125 000e 0693     		str	r3, [sp, #24]
 126 0010 0793     		str	r3, [sp, #28]
  65:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 127              		.loc 1 65 3 is_stmt 1 view .LVU27
 128              		.loc 1 65 16 is_stmt 0 view .LVU28
 129 0012 0268     		ldr	r2, [r0]
 130              		.loc 1 65 5 view .LVU29
 131 0014 434B     		ldr	r3, .L15
 132 0016 9A42     		cmp	r2, r3
 133 0018 02D0     		beq	.L12
 134              	.LVL3:
 135              	.L7:
  66:Core/Src/usart.c ****   {
  67:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
  70:Core/Src/usart.c ****     /* USART3 clock enable */
  71:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
  72:Core/Src/usart.c **** 
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  74:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
  75:Core/Src/usart.c ****     /**USART3 GPIO Configuration
  76:Core/Src/usart.c ****     PB11     ------> USART3_RX
  77:Core/Src/usart.c ****     PD8     ------> USART3_TX
  78:Core/Src/usart.c ****     */
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  82:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  83:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
  84:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
  87:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  88:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  89:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  90:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
  91:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c ****     /* USART3 DMA Init */
  94:Core/Src/usart.c ****     /* USART3_RX Init */
  95:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Stream1;
ARM GAS  /tmp/ccxC5xij.s 			page 5


  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
  97:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
  98:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
  99:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 104:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 105:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 106:Core/Src/usart.c ****     {
 107:Core/Src/usart.c ****       Error_Handler();
 108:Core/Src/usart.c ****     }
 109:Core/Src/usart.c **** 
 110:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 111:Core/Src/usart.c **** 
 112:Core/Src/usart.c ****     /* USART3_TX Init */
 113:Core/Src/usart.c ****     hdma_usart3_tx.Instance = DMA1_Stream3;
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 115:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 116:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 122:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 123:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 124:Core/Src/usart.c ****     {
 125:Core/Src/usart.c ****       Error_Handler();
 126:Core/Src/usart.c ****     }
 127:Core/Src/usart.c **** 
 128:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart3_tx);
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****     /* USART3 interrupt Init */
 131:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 132:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 133:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 134:Core/Src/usart.c **** 
 135:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 136:Core/Src/usart.c ****   }
 137:Core/Src/usart.c **** }
 136              		.loc 1 137 1 view .LVU30
 137 001a 09B0     		add	sp, sp, #36
 138              	.LCFI3:
 139              		.cfi_remember_state
 140              		.cfi_def_cfa_offset 28
 141              		@ sp needed
 142 001c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 143              	.LVL4:
 144              	.L12:
 145              	.LCFI4:
 146              		.cfi_restore_state
 147              		.loc 1 137 1 view .LVU31
 148 0020 0446     		mov	r4, r0
  71:Core/Src/usart.c **** 
 149              		.loc 1 71 5 is_stmt 1 view .LVU32
ARM GAS  /tmp/ccxC5xij.s 			page 6


 150              	.LBB2:
  71:Core/Src/usart.c **** 
 151              		.loc 1 71 5 view .LVU33
 152 0022 0025     		movs	r5, #0
 153 0024 0095     		str	r5, [sp]
  71:Core/Src/usart.c **** 
 154              		.loc 1 71 5 view .LVU34
 155 0026 03F5F833 		add	r3, r3, #126976
 156 002a 1A6C     		ldr	r2, [r3, #64]
 157 002c 42F48022 		orr	r2, r2, #262144
 158 0030 1A64     		str	r2, [r3, #64]
  71:Core/Src/usart.c **** 
 159              		.loc 1 71 5 view .LVU35
 160 0032 1A6C     		ldr	r2, [r3, #64]
 161 0034 02F48022 		and	r2, r2, #262144
 162 0038 0092     		str	r2, [sp]
  71:Core/Src/usart.c **** 
 163              		.loc 1 71 5 view .LVU36
 164 003a 009A     		ldr	r2, [sp]
 165              	.LBE2:
  71:Core/Src/usart.c **** 
 166              		.loc 1 71 5 view .LVU37
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 167              		.loc 1 73 5 view .LVU38
 168              	.LBB3:
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 169              		.loc 1 73 5 view .LVU39
 170 003c 0195     		str	r5, [sp, #4]
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 171              		.loc 1 73 5 view .LVU40
 172 003e 1A6B     		ldr	r2, [r3, #48]
 173 0040 42F00202 		orr	r2, r2, #2
 174 0044 1A63     		str	r2, [r3, #48]
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 175              		.loc 1 73 5 view .LVU41
 176 0046 1A6B     		ldr	r2, [r3, #48]
 177 0048 02F00202 		and	r2, r2, #2
 178 004c 0192     		str	r2, [sp, #4]
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 179              		.loc 1 73 5 view .LVU42
 180 004e 019A     		ldr	r2, [sp, #4]
 181              	.LBE3:
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 182              		.loc 1 73 5 view .LVU43
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 183              		.loc 1 74 5 view .LVU44
 184              	.LBB4:
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 185              		.loc 1 74 5 view .LVU45
 186 0050 0295     		str	r5, [sp, #8]
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 187              		.loc 1 74 5 view .LVU46
 188 0052 1A6B     		ldr	r2, [r3, #48]
 189 0054 42F00802 		orr	r2, r2, #8
 190 0058 1A63     		str	r2, [r3, #48]
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 191              		.loc 1 74 5 view .LVU47
ARM GAS  /tmp/ccxC5xij.s 			page 7


 192 005a 1B6B     		ldr	r3, [r3, #48]
 193 005c 03F00803 		and	r3, r3, #8
 194 0060 0293     		str	r3, [sp, #8]
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 195              		.loc 1 74 5 view .LVU48
 196 0062 029B     		ldr	r3, [sp, #8]
 197              	.LBE4:
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 198              		.loc 1 74 5 view .LVU49
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 199              		.loc 1 79 5 view .LVU50
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 200              		.loc 1 79 25 is_stmt 0 view .LVU51
 201 0064 4FF40063 		mov	r3, #2048
 202 0068 0393     		str	r3, [sp, #12]
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 80 5 is_stmt 1 view .LVU52
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 80 26 is_stmt 0 view .LVU53
 205 006a 4FF00209 		mov	r9, #2
 206 006e CDF81090 		str	r9, [sp, #16]
  81:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 207              		.loc 1 81 5 is_stmt 1 view .LVU54
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 208              		.loc 1 82 5 view .LVU55
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 209              		.loc 1 82 27 is_stmt 0 view .LVU56
 210 0072 4FF00308 		mov	r8, #3
 211 0076 CDF81880 		str	r8, [sp, #24]
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 212              		.loc 1 83 5 is_stmt 1 view .LVU57
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 213              		.loc 1 83 31 is_stmt 0 view .LVU58
 214 007a 0727     		movs	r7, #7
 215 007c 0797     		str	r7, [sp, #28]
  84:Core/Src/usart.c **** 
 216              		.loc 1 84 5 is_stmt 1 view .LVU59
 217 007e 03A9     		add	r1, sp, #12
 218 0080 2948     		ldr	r0, .L15+4
 219              	.LVL5:
  84:Core/Src/usart.c **** 
 220              		.loc 1 84 5 is_stmt 0 view .LVU60
 221 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 222              	.LVL6:
  86:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 223              		.loc 1 86 5 is_stmt 1 view .LVU61
  86:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 224              		.loc 1 86 25 is_stmt 0 view .LVU62
 225 0086 4FF48076 		mov	r6, #256
 226 008a 0396     		str	r6, [sp, #12]
  87:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 227              		.loc 1 87 5 is_stmt 1 view .LVU63
  87:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 228              		.loc 1 87 26 is_stmt 0 view .LVU64
 229 008c CDF81090 		str	r9, [sp, #16]
  88:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 230              		.loc 1 88 5 is_stmt 1 view .LVU65
ARM GAS  /tmp/ccxC5xij.s 			page 8


  88:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 231              		.loc 1 88 26 is_stmt 0 view .LVU66
 232 0090 0595     		str	r5, [sp, #20]
  89:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 233              		.loc 1 89 5 is_stmt 1 view .LVU67
  89:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 234              		.loc 1 89 27 is_stmt 0 view .LVU68
 235 0092 CDF81880 		str	r8, [sp, #24]
  90:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 236              		.loc 1 90 5 is_stmt 1 view .LVU69
  90:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 237              		.loc 1 90 31 is_stmt 0 view .LVU70
 238 0096 0797     		str	r7, [sp, #28]
  91:Core/Src/usart.c **** 
 239              		.loc 1 91 5 is_stmt 1 view .LVU71
 240 0098 03A9     		add	r1, sp, #12
 241 009a 2448     		ldr	r0, .L15+8
 242 009c FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL7:
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 244              		.loc 1 95 5 view .LVU72
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 245              		.loc 1 95 29 is_stmt 0 view .LVU73
 246 00a0 2348     		ldr	r0, .L15+12
 247 00a2 244B     		ldr	r3, .L15+16
 248 00a4 0360     		str	r3, [r0]
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 249              		.loc 1 96 5 is_stmt 1 view .LVU74
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 250              		.loc 1 96 33 is_stmt 0 view .LVU75
 251 00a6 4FF00063 		mov	r3, #134217728
 252 00aa 4360     		str	r3, [r0, #4]
  97:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 253              		.loc 1 97 5 is_stmt 1 view .LVU76
  97:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 254              		.loc 1 97 35 is_stmt 0 view .LVU77
 255 00ac 8560     		str	r5, [r0, #8]
  98:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 256              		.loc 1 98 5 is_stmt 1 view .LVU78
  98:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 257              		.loc 1 98 35 is_stmt 0 view .LVU79
 258 00ae C560     		str	r5, [r0, #12]
  99:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 259              		.loc 1 99 5 is_stmt 1 view .LVU80
  99:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 260              		.loc 1 99 32 is_stmt 0 view .LVU81
 261 00b0 4FF48063 		mov	r3, #1024
 262 00b4 0361     		str	r3, [r0, #16]
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 263              		.loc 1 100 5 is_stmt 1 view .LVU82
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 264              		.loc 1 100 45 is_stmt 0 view .LVU83
 265 00b6 4561     		str	r5, [r0, #20]
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 266              		.loc 1 101 5 is_stmt 1 view .LVU84
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 267              		.loc 1 101 42 is_stmt 0 view .LVU85
ARM GAS  /tmp/ccxC5xij.s 			page 9


 268 00b8 8561     		str	r5, [r0, #24]
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 269              		.loc 1 102 5 is_stmt 1 view .LVU86
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 270              		.loc 1 102 30 is_stmt 0 view .LVU87
 271 00ba C661     		str	r6, [r0, #28]
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 272              		.loc 1 103 5 is_stmt 1 view .LVU88
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 273              		.loc 1 103 34 is_stmt 0 view .LVU89
 274 00bc 4FF44033 		mov	r3, #196608
 275 00c0 0362     		str	r3, [r0, #32]
 104:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 276              		.loc 1 104 5 is_stmt 1 view .LVU90
 104:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 277              		.loc 1 104 34 is_stmt 0 view .LVU91
 278 00c2 4562     		str	r5, [r0, #36]
 105:Core/Src/usart.c ****     {
 279              		.loc 1 105 5 is_stmt 1 view .LVU92
 105:Core/Src/usart.c ****     {
 280              		.loc 1 105 9 is_stmt 0 view .LVU93
 281 00c4 FFF7FEFF 		bl	HAL_DMA_Init
 282              	.LVL8:
 105:Core/Src/usart.c ****     {
 283              		.loc 1 105 8 view .LVU94
 284 00c8 28BB     		cbnz	r0, .L13
 285              	.L9:
 110:Core/Src/usart.c **** 
 286              		.loc 1 110 5 is_stmt 1 view .LVU95
 110:Core/Src/usart.c **** 
 287              		.loc 1 110 5 view .LVU96
 288 00ca 194B     		ldr	r3, .L15+12
 289 00cc A363     		str	r3, [r4, #56]
 110:Core/Src/usart.c **** 
 290              		.loc 1 110 5 view .LVU97
 291 00ce 9C63     		str	r4, [r3, #56]
 110:Core/Src/usart.c **** 
 292              		.loc 1 110 5 view .LVU98
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 293              		.loc 1 113 5 view .LVU99
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 294              		.loc 1 113 29 is_stmt 0 view .LVU100
 295 00d0 1948     		ldr	r0, .L15+20
 296 00d2 1A4B     		ldr	r3, .L15+24
 297 00d4 0360     		str	r3, [r0]
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 298              		.loc 1 114 5 is_stmt 1 view .LVU101
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 299              		.loc 1 114 33 is_stmt 0 view .LVU102
 300 00d6 4FF00063 		mov	r3, #134217728
 301 00da 4360     		str	r3, [r0, #4]
 115:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 302              		.loc 1 115 5 is_stmt 1 view .LVU103
 115:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 303              		.loc 1 115 35 is_stmt 0 view .LVU104
 304 00dc 4023     		movs	r3, #64
 305 00de 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccxC5xij.s 			page 10


 116:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 306              		.loc 1 116 5 is_stmt 1 view .LVU105
 116:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 307              		.loc 1 116 35 is_stmt 0 view .LVU106
 308 00e0 0023     		movs	r3, #0
 309 00e2 C360     		str	r3, [r0, #12]
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 310              		.loc 1 117 5 is_stmt 1 view .LVU107
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 311              		.loc 1 117 32 is_stmt 0 view .LVU108
 312 00e4 4FF48062 		mov	r2, #1024
 313 00e8 0261     		str	r2, [r0, #16]
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 314              		.loc 1 118 5 is_stmt 1 view .LVU109
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 315              		.loc 1 118 45 is_stmt 0 view .LVU110
 316 00ea 4361     		str	r3, [r0, #20]
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 317              		.loc 1 119 5 is_stmt 1 view .LVU111
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 318              		.loc 1 119 42 is_stmt 0 view .LVU112
 319 00ec 8361     		str	r3, [r0, #24]
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 320              		.loc 1 120 5 is_stmt 1 view .LVU113
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 321              		.loc 1 120 30 is_stmt 0 view .LVU114
 322 00ee C361     		str	r3, [r0, #28]
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 323              		.loc 1 121 5 is_stmt 1 view .LVU115
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 324              		.loc 1 121 34 is_stmt 0 view .LVU116
 325 00f0 4FF44032 		mov	r2, #196608
 326 00f4 0262     		str	r2, [r0, #32]
 122:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 327              		.loc 1 122 5 is_stmt 1 view .LVU117
 122:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 328              		.loc 1 122 34 is_stmt 0 view .LVU118
 329 00f6 4362     		str	r3, [r0, #36]
 123:Core/Src/usart.c ****     {
 330              		.loc 1 123 5 is_stmt 1 view .LVU119
 123:Core/Src/usart.c ****     {
 331              		.loc 1 123 9 is_stmt 0 view .LVU120
 332 00f8 FFF7FEFF 		bl	HAL_DMA_Init
 333              	.LVL9:
 123:Core/Src/usart.c ****     {
 334              		.loc 1 123 8 view .LVU121
 335 00fc 70B9     		cbnz	r0, .L14
 336              	.L10:
 128:Core/Src/usart.c **** 
 337              		.loc 1 128 5 is_stmt 1 view .LVU122
 128:Core/Src/usart.c **** 
 338              		.loc 1 128 5 view .LVU123
 339 00fe 0E4B     		ldr	r3, .L15+20
 340 0100 6363     		str	r3, [r4, #52]
 128:Core/Src/usart.c **** 
 341              		.loc 1 128 5 view .LVU124
 342 0102 9C63     		str	r4, [r3, #56]
ARM GAS  /tmp/ccxC5xij.s 			page 11


 128:Core/Src/usart.c **** 
 343              		.loc 1 128 5 view .LVU125
 131:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 344              		.loc 1 131 5 view .LVU126
 345 0104 0022     		movs	r2, #0
 346 0106 0521     		movs	r1, #5
 347 0108 2720     		movs	r0, #39
 348 010a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 349              	.LVL10:
 132:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 350              		.loc 1 132 5 view .LVU127
 351 010e 2720     		movs	r0, #39
 352 0110 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 353              	.LVL11:
 354              		.loc 1 137 1 is_stmt 0 view .LVU128
 355 0114 81E7     		b	.L7
 356              	.L13:
 107:Core/Src/usart.c ****     }
 357              		.loc 1 107 7 is_stmt 1 view .LVU129
 358 0116 FFF7FEFF 		bl	Error_Handler
 359              	.LVL12:
 360 011a D6E7     		b	.L9
 361              	.L14:
 125:Core/Src/usart.c ****     }
 362              		.loc 1 125 7 view .LVU130
 363 011c FFF7FEFF 		bl	Error_Handler
 364              	.LVL13:
 365 0120 EDE7     		b	.L10
 366              	.L16:
 367 0122 00BF     		.align	2
 368              	.L15:
 369 0124 00480040 		.word	1073760256
 370 0128 00040240 		.word	1073873920
 371 012c 000C0240 		.word	1073875968
 372 0130 00000000 		.word	.LANCHOR1
 373 0134 28600240 		.word	1073897512
 374 0138 00000000 		.word	.LANCHOR2
 375 013c 58600240 		.word	1073897560
 376              		.cfi_endproc
 377              	.LFE131:
 379              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 380              		.align	1
 381              		.global	HAL_UART_MspDeInit
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	HAL_UART_MspDeInit:
 388              	.LVL14:
 389              	.LFB132:
 138:Core/Src/usart.c **** 
 139:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 140:Core/Src/usart.c **** {
 390              		.loc 1 140 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccxC5xij.s 			page 12


 141:Core/Src/usart.c **** 
 142:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 394              		.loc 1 142 3 view .LVU132
 395              		.loc 1 142 16 is_stmt 0 view .LVU133
 396 0000 0268     		ldr	r2, [r0]
 397              		.loc 1 142 5 view .LVU134
 398 0002 0F4B     		ldr	r3, .L24
 399 0004 9A42     		cmp	r2, r3
 400 0006 00D0     		beq	.L23
 401 0008 7047     		bx	lr
 402              	.L23:
 140:Core/Src/usart.c **** 
 403              		.loc 1 140 1 view .LVU135
 404 000a 10B5     		push	{r4, lr}
 405              	.LCFI5:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 4, -8
 408              		.cfi_offset 14, -4
 409 000c 0446     		mov	r4, r0
 143:Core/Src/usart.c ****   {
 144:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 145:Core/Src/usart.c **** 
 146:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 147:Core/Src/usart.c ****     /* Peripheral clock disable */
 148:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 410              		.loc 1 148 5 is_stmt 1 view .LVU136
 411 000e 0D4A     		ldr	r2, .L24+4
 412 0010 136C     		ldr	r3, [r2, #64]
 413 0012 23F48023 		bic	r3, r3, #262144
 414 0016 1364     		str	r3, [r2, #64]
 149:Core/Src/usart.c **** 
 150:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 151:Core/Src/usart.c ****     PB11     ------> USART3_RX
 152:Core/Src/usart.c ****     PD8     ------> USART3_TX
 153:Core/Src/usart.c ****     */
 154:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_11);
 415              		.loc 1 154 5 view .LVU137
 416 0018 4FF40061 		mov	r1, #2048
 417 001c 0A48     		ldr	r0, .L24+8
 418              	.LVL15:
 419              		.loc 1 154 5 is_stmt 0 view .LVU138
 420 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 421              	.LVL16:
 155:Core/Src/usart.c **** 
 156:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOD, GPIO_PIN_8);
 422              		.loc 1 156 5 is_stmt 1 view .LVU139
 423 0022 4FF48071 		mov	r1, #256
 424 0026 0948     		ldr	r0, .L24+12
 425 0028 FFF7FEFF 		bl	HAL_GPIO_DeInit
 426              	.LVL17:
 157:Core/Src/usart.c **** 
 158:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 159:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 427              		.loc 1 159 5 view .LVU140
 428 002c A06B     		ldr	r0, [r4, #56]
 429 002e FFF7FEFF 		bl	HAL_DMA_DeInit
 430              	.LVL18:
ARM GAS  /tmp/ccxC5xij.s 			page 13


 160:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 431              		.loc 1 160 5 view .LVU141
 432 0032 606B     		ldr	r0, [r4, #52]
 433 0034 FFF7FEFF 		bl	HAL_DMA_DeInit
 434              	.LVL19:
 161:Core/Src/usart.c **** 
 162:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 163:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 435              		.loc 1 163 5 view .LVU142
 436 0038 2720     		movs	r0, #39
 437 003a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 438              	.LVL20:
 164:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 165:Core/Src/usart.c **** 
 166:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 167:Core/Src/usart.c ****   }
 168:Core/Src/usart.c **** }
 439              		.loc 1 168 1 is_stmt 0 view .LVU143
 440 003e 10BD     		pop	{r4, pc}
 441              	.LVL21:
 442              	.L25:
 443              		.loc 1 168 1 view .LVU144
 444              		.align	2
 445              	.L24:
 446 0040 00480040 		.word	1073760256
 447 0044 00380240 		.word	1073887232
 448 0048 00040240 		.word	1073873920
 449 004c 000C0240 		.word	1073875968
 450              		.cfi_endproc
 451              	.LFE132:
 453              		.global	hdma_usart3_tx
 454              		.global	hdma_usart3_rx
 455              		.global	huart3
 456              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 457              		.align	2
 458              		.set	.LANCHOR1,. + 0
 461              	hdma_usart3_rx:
 462 0000 00000000 		.space	96
 462      00000000 
 462      00000000 
 462      00000000 
 462      00000000 
 463              		.section	.bss.hdma_usart3_tx,"aw",%nobits
 464              		.align	2
 465              		.set	.LANCHOR2,. + 0
 468              	hdma_usart3_tx:
 469 0000 00000000 		.space	96
 469      00000000 
 469      00000000 
 469      00000000 
 469      00000000 
 470              		.section	.bss.huart3,"aw",%nobits
 471              		.align	2
 472              		.set	.LANCHOR0,. + 0
 475              	huart3:
 476 0000 00000000 		.space	68
 476      00000000 
ARM GAS  /tmp/ccxC5xij.s 			page 14


 476      00000000 
 476      00000000 
 476      00000000 
 477              		.text
 478              	.Letext0:
 479              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 480              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 481              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 482              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 483              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 484              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 485              		.file 8 "Core/Inc/usart.h"
 486              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 487              		.file 10 "Core/Inc/main.h"
ARM GAS  /tmp/ccxC5xij.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccxC5xij.s:18     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccxC5xij.s:26     .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccxC5xij.s:85     .text.MX_USART3_UART_Init:000000000000002c $d
     /tmp/ccxC5xij.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccxC5xij.s:98     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccxC5xij.s:369    .text.HAL_UART_MspInit:0000000000000124 $d
     /tmp/ccxC5xij.s:380    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccxC5xij.s:387    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccxC5xij.s:446    .text.HAL_UART_MspDeInit:0000000000000040 $d
     /tmp/ccxC5xij.s:468    .bss.hdma_usart3_tx:0000000000000000 hdma_usart3_tx
     /tmp/ccxC5xij.s:461    .bss.hdma_usart3_rx:0000000000000000 hdma_usart3_rx
     /tmp/ccxC5xij.s:475    .bss.huart3:0000000000000000 huart3
     /tmp/ccxC5xij.s:457    .bss.hdma_usart3_rx:0000000000000000 $d
     /tmp/ccxC5xij.s:464    .bss.hdma_usart3_tx:0000000000000000 $d
     /tmp/ccxC5xij.s:471    .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
