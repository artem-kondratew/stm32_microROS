ARM GAS  /tmp/ccfOqfDn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB140:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include <rcl/rcl.h>
  29:Core/Src/main.c **** #include <rcl/error_handling.h>
ARM GAS  /tmp/ccfOqfDn.s 			page 2


  30:Core/Src/main.c **** #include <rclc/rclc.h>
  31:Core/Src/main.c **** #include <rclc/executor.h>
  32:Core/Src/main.c **** #include <uxr/client/transport.h>
  33:Core/Src/main.c **** #include <rmw_microxrcedds_c/config.h>
  34:Core/Src/main.c **** #include <rmw_microros/rmw_microros.h>
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** #include <std_msgs/msg/int32.h>
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
ARM GAS  /tmp/ccfOqfDn.s 			page 3


  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_DMA_Init();
 101:Core/Src/main.c ****   MX_USART3_UART_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Init scheduler */
 107:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 108:Core/Src/main.c ****   MX_FREERTOS_Init();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Start scheduler */
 111:Core/Src/main.c ****   osKernelStart();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 114:Core/Src/main.c ****   /* Infinite loop */
 115:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 116:Core/Src/main.c ****   while (1)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     /* USER CODE END WHILE */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 121:Core/Src/main.c ****   }
 122:Core/Src/main.c ****   /* USER CODE END 3 */
 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /**
 126:Core/Src/main.c ****   * @brief System Clock Configuration
 127:Core/Src/main.c ****   * @retval None
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c **** void SystemClock_Config(void)
 130:Core/Src/main.c **** {
 131:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 137:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 140:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/ccfOqfDn.s 			page 4


 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 150:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 158:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 171:Core/Src/main.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
 172:Core/Src/main.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
 173:Core/Src/main.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
 174:Core/Src/main.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** void * microros_allocate(size_t size, void * state);
 177:Core/Src/main.c **** void microros_deallocate(void * pointer, void * state);
 178:Core/Src/main.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
 179:Core/Src/main.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
 180:Core/Src/main.c **** /* USER CODE END 4 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 184:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 185:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 186:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 187:Core/Src/main.c ****   * @param  htim : TIM handle
 188:Core/Src/main.c ****   * @retval None
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 191:Core/Src/main.c **** {
  30              		.loc 1 191 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 191 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
ARM GAS  /tmp/ccfOqfDn.s 			page 5


  39              		.cfi_offset 14, -4
 192:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 195:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  40              		.loc 1 195 3 is_stmt 1 view .LVU2
  41              		.loc 1 195 11 is_stmt 0 view .LVU3
  42 0002 0268     		ldr	r2, [r0]
  43              		.loc 1 195 6 view .LVU4
  44 0004 034B     		ldr	r3, .L5
  45 0006 9A42     		cmp	r2, r3
  46 0008 00D0     		beq	.L4
  47              	.LVL1:
  48              	.L1:
 196:Core/Src/main.c ****     HAL_IncTick();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 201:Core/Src/main.c **** }
  49              		.loc 1 201 1 view .LVU5
  50 000a 08BD     		pop	{r3, pc}
  51              	.LVL2:
  52              	.L4:
 196:Core/Src/main.c ****     HAL_IncTick();
  53              		.loc 1 196 5 is_stmt 1 view .LVU6
  54 000c FFF7FEFF 		bl	HAL_IncTick
  55              	.LVL3:
  56              		.loc 1 201 1 is_stmt 0 view .LVU7
  57 0010 FBE7     		b	.L1
  58              	.L6:
  59 0012 00BF     		.align	2
  60              	.L5:
  61 0014 00000140 		.word	1073807360
  62              		.cfi_endproc
  63              	.LFE140:
  65              		.section	.text.Error_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	Error_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	Error_Handler:
  74              	.LFB141:
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** void Error_Handler(void)
 208:Core/Src/main.c **** {
  75              		.loc 1 208 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccfOqfDn.s 			page 6


  80              		@ link register save eliminated.
 209:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 210:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 211:Core/Src/main.c ****   __disable_irq();
  81              		.loc 1 211 3 view .LVU9
  82              	.LBB4:
  83              	.LBI4:
  84              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/ccfOqfDn.s 			page 7


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/ccfOqfDn.s 			page 8


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  85              		.loc 2 140 27 view .LVU10
  86              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  87              		.loc 2 142 3 view .LVU11
  88              		.syntax unified
  89              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  90 0000 72B6     		cpsid i
  91              	@ 0 "" 2
  92              		.thumb
  93              		.syntax unified
  94              	.L8:
  95              	.LBE5:
  96              	.LBE4:
 212:Core/Src/main.c ****   while (1)
  97              		.loc 1 212 3 discriminator 1 view .LVU12
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****   }
  98              		.loc 1 214 3 discriminator 1 view .LVU13
 212:Core/Src/main.c ****   while (1)
  99              		.loc 1 212 9 discriminator 1 view .LVU14
 100 0002 FEE7     		b	.L8
 101              		.cfi_endproc
ARM GAS  /tmp/ccfOqfDn.s 			page 9


 102              	.LFE141:
 104              		.section	.text.SystemClock_Config,"ax",%progbits
 105              		.align	1
 106              		.global	SystemClock_Config
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	SystemClock_Config:
 113              	.LFB139:
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114              		.loc 1 130 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 80
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 00B5     		push	{lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 14, -4
 122 0002 95B0     		sub	sp, sp, #84
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 88
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125              		.loc 1 131 3 view .LVU16
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126              		.loc 1 131 22 is_stmt 0 view .LVU17
 127 0004 3022     		movs	r2, #48
 128 0006 0021     		movs	r1, #0
 129 0008 08A8     		add	r0, sp, #32
 130 000a FFF7FEFF 		bl	memset
 131              	.LVL4:
 132:Core/Src/main.c **** 
 132              		.loc 1 132 3 is_stmt 1 view .LVU18
 132:Core/Src/main.c **** 
 133              		.loc 1 132 22 is_stmt 0 view .LVU19
 134 000e 0023     		movs	r3, #0
 135 0010 0393     		str	r3, [sp, #12]
 136 0012 0493     		str	r3, [sp, #16]
 137 0014 0593     		str	r3, [sp, #20]
 138 0016 0693     		str	r3, [sp, #24]
 139 0018 0793     		str	r3, [sp, #28]
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140              		.loc 1 136 3 is_stmt 1 view .LVU20
 141              	.LBB6:
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142              		.loc 1 136 3 view .LVU21
 143 001a 0193     		str	r3, [sp, #4]
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144              		.loc 1 136 3 view .LVU22
 145 001c 204A     		ldr	r2, .L15
 146 001e 116C     		ldr	r1, [r2, #64]
 147 0020 41F08051 		orr	r1, r1, #268435456
 148 0024 1164     		str	r1, [r2, #64]
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 149              		.loc 1 136 3 view .LVU23
 150 0026 126C     		ldr	r2, [r2, #64]
 151 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  /tmp/ccfOqfDn.s 			page 10


 152 002c 0192     		str	r2, [sp, #4]
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 153              		.loc 1 136 3 view .LVU24
 154 002e 019A     		ldr	r2, [sp, #4]
 155              	.LBE6:
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 156              		.loc 1 136 3 view .LVU25
 137:Core/Src/main.c **** 
 157              		.loc 1 137 3 view .LVU26
 158              	.LBB7:
 137:Core/Src/main.c **** 
 159              		.loc 1 137 3 view .LVU27
 160 0030 0293     		str	r3, [sp, #8]
 137:Core/Src/main.c **** 
 161              		.loc 1 137 3 view .LVU28
 162 0032 1C4B     		ldr	r3, .L15+4
 163 0034 1A68     		ldr	r2, [r3]
 164 0036 42F48042 		orr	r2, r2, #16384
 165 003a 1A60     		str	r2, [r3]
 137:Core/Src/main.c **** 
 166              		.loc 1 137 3 view .LVU29
 167 003c 1B68     		ldr	r3, [r3]
 168 003e 03F48043 		and	r3, r3, #16384
 169 0042 0293     		str	r3, [sp, #8]
 137:Core/Src/main.c **** 
 170              		.loc 1 137 3 view .LVU30
 171 0044 029B     		ldr	r3, [sp, #8]
 172              	.LBE7:
 137:Core/Src/main.c **** 
 173              		.loc 1 137 3 view .LVU31
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 174              		.loc 1 142 3 view .LVU32
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 175              		.loc 1 142 36 is_stmt 0 view .LVU33
 176 0046 0123     		movs	r3, #1
 177 0048 0893     		str	r3, [sp, #32]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 178              		.loc 1 143 3 is_stmt 1 view .LVU34
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179              		.loc 1 143 30 is_stmt 0 view .LVU35
 180 004a 4FF48033 		mov	r3, #65536
 181 004e 0993     		str	r3, [sp, #36]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 182              		.loc 1 144 3 is_stmt 1 view .LVU36
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 183              		.loc 1 144 34 is_stmt 0 view .LVU37
 184 0050 0223     		movs	r3, #2
 185 0052 0E93     		str	r3, [sp, #56]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 186              		.loc 1 145 3 is_stmt 1 view .LVU38
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 187              		.loc 1 145 35 is_stmt 0 view .LVU39
 188 0054 4FF48002 		mov	r2, #4194304
 189 0058 0F92     		str	r2, [sp, #60]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 190              		.loc 1 146 3 is_stmt 1 view .LVU40
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
ARM GAS  /tmp/ccfOqfDn.s 			page 11


 191              		.loc 1 146 30 is_stmt 0 view .LVU41
 192 005a 0422     		movs	r2, #4
 193 005c 1092     		str	r2, [sp, #64]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 194              		.loc 1 147 3 is_stmt 1 view .LVU42
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 195              		.loc 1 147 30 is_stmt 0 view .LVU43
 196 005e A822     		movs	r2, #168
 197 0060 1192     		str	r2, [sp, #68]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 198              		.loc 1 148 3 is_stmt 1 view .LVU44
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 199              		.loc 1 148 30 is_stmt 0 view .LVU45
 200 0062 1293     		str	r3, [sp, #72]
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 201              		.loc 1 149 3 is_stmt 1 view .LVU46
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202              		.loc 1 149 30 is_stmt 0 view .LVU47
 203 0064 0723     		movs	r3, #7
 204 0066 1393     		str	r3, [sp, #76]
 150:Core/Src/main.c ****   {
 205              		.loc 1 150 3 is_stmt 1 view .LVU48
 150:Core/Src/main.c ****   {
 206              		.loc 1 150 7 is_stmt 0 view .LVU49
 207 0068 08A8     		add	r0, sp, #32
 208 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 209              	.LVL5:
 150:Core/Src/main.c ****   {
 210              		.loc 1 150 6 view .LVU50
 211 006e 98B9     		cbnz	r0, .L13
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 212              		.loc 1 157 3 is_stmt 1 view .LVU51
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 213              		.loc 1 157 31 is_stmt 0 view .LVU52
 214 0070 0F23     		movs	r3, #15
 215 0072 0393     		str	r3, [sp, #12]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 216              		.loc 1 159 3 is_stmt 1 view .LVU53
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217              		.loc 1 159 34 is_stmt 0 view .LVU54
 218 0074 0223     		movs	r3, #2
 219 0076 0493     		str	r3, [sp, #16]
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 220              		.loc 1 160 3 is_stmt 1 view .LVU55
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 221              		.loc 1 160 35 is_stmt 0 view .LVU56
 222 0078 0023     		movs	r3, #0
 223 007a 0593     		str	r3, [sp, #20]
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 224              		.loc 1 161 3 is_stmt 1 view .LVU57
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 225              		.loc 1 161 36 is_stmt 0 view .LVU58
 226 007c 4FF4A053 		mov	r3, #5120
 227 0080 0693     		str	r3, [sp, #24]
 162:Core/Src/main.c **** 
 228              		.loc 1 162 3 is_stmt 1 view .LVU59
 162:Core/Src/main.c **** 
ARM GAS  /tmp/ccfOqfDn.s 			page 12


 229              		.loc 1 162 36 is_stmt 0 view .LVU60
 230 0082 4FF48053 		mov	r3, #4096
 231 0086 0793     		str	r3, [sp, #28]
 164:Core/Src/main.c ****   {
 232              		.loc 1 164 3 is_stmt 1 view .LVU61
 164:Core/Src/main.c ****   {
 233              		.loc 1 164 7 is_stmt 0 view .LVU62
 234 0088 0521     		movs	r1, #5
 235 008a 03A8     		add	r0, sp, #12
 236 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 237              	.LVL6:
 164:Core/Src/main.c ****   {
 238              		.loc 1 164 6 view .LVU63
 239 0090 20B9     		cbnz	r0, .L14
 168:Core/Src/main.c **** 
 240              		.loc 1 168 1 view .LVU64
 241 0092 15B0     		add	sp, sp, #84
 242              	.LCFI3:
 243              		.cfi_remember_state
 244              		.cfi_def_cfa_offset 4
 245              		@ sp needed
 246 0094 5DF804FB 		ldr	pc, [sp], #4
 247              	.L13:
 248              	.LCFI4:
 249              		.cfi_restore_state
 152:Core/Src/main.c ****   }
 250              		.loc 1 152 5 is_stmt 1 view .LVU65
 251 0098 FFF7FEFF 		bl	Error_Handler
 252              	.LVL7:
 253              	.L14:
 166:Core/Src/main.c ****   }
 254              		.loc 1 166 5 view .LVU66
 255 009c FFF7FEFF 		bl	Error_Handler
 256              	.LVL8:
 257              	.L16:
 258              		.align	2
 259              	.L15:
 260 00a0 00380240 		.word	1073887232
 261 00a4 00700040 		.word	1073770496
 262              		.cfi_endproc
 263              	.LFE139:
 265              		.section	.text.main,"ax",%progbits
 266              		.align	1
 267              		.global	main
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv4-sp-d16
 273              	main:
 274              	.LFB138:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 275              		.loc 1 77 1 view -0
 276              		.cfi_startproc
 277              		@ Volatile: function does not return.
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccfOqfDn.s 			page 13


 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 285              		.loc 1 85 3 view .LVU68
 286 0002 FFF7FEFF 		bl	HAL_Init
 287              	.LVL9:
  92:Core/Src/main.c **** 
 288              		.loc 1 92 3 view .LVU69
 289 0006 FFF7FEFF 		bl	SystemClock_Config
 290              	.LVL10:
  99:Core/Src/main.c ****   MX_DMA_Init();
 291              		.loc 1 99 3 view .LVU70
 292 000a FFF7FEFF 		bl	MX_GPIO_Init
 293              	.LVL11:
 100:Core/Src/main.c ****   MX_USART3_UART_Init();
 294              		.loc 1 100 3 view .LVU71
 295 000e FFF7FEFF 		bl	MX_DMA_Init
 296              	.LVL12:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 297              		.loc 1 101 3 view .LVU72
 298 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 299              	.LVL13:
 107:Core/Src/main.c ****   MX_FREERTOS_Init();
 300              		.loc 1 107 3 view .LVU73
 301 0016 FFF7FEFF 		bl	osKernelInitialize
 302              	.LVL14:
 108:Core/Src/main.c **** 
 303              		.loc 1 108 3 view .LVU74
 304 001a FFF7FEFF 		bl	MX_FREERTOS_Init
 305              	.LVL15:
 111:Core/Src/main.c **** 
 306              		.loc 1 111 3 view .LVU75
 307 001e FFF7FEFF 		bl	osKernelStart
 308              	.LVL16:
 309              	.L18:
 116:Core/Src/main.c ****   {
 310              		.loc 1 116 3 discriminator 1 view .LVU76
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 311              		.loc 1 121 3 discriminator 1 view .LVU77
 116:Core/Src/main.c ****   {
 312              		.loc 1 116 9 discriminator 1 view .LVU78
 313 0022 FEE7     		b	.L18
 314              		.cfi_endproc
 315              	.LFE138:
 317              		.text
 318              	.Letext0:
 319              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 320              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 321              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 322              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 323              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 324              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 325              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 326              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 327              		.file 11 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/tim
ARM GAS  /tmp/ccfOqfDn.s 			page 14


 328              		.file 12 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 329              		.file 13 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 330              		.file 14 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl_act
 331              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 332              		.file 16 "Core/Inc/gpio.h"
 333              		.file 17 "Core/Inc/dma.h"
 334              		.file 18 "Core/Inc/usart.h"
 335              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 336              		.file 20 "<built-in>"
ARM GAS  /tmp/ccfOqfDn.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccfOqfDn.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccfOqfDn.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccfOqfDn.s:61     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccfOqfDn.s:66     .text.Error_Handler:0000000000000000 $t
     /tmp/ccfOqfDn.s:73     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccfOqfDn.s:105    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccfOqfDn.s:112    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccfOqfDn.s:260    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccfOqfDn.s:266    .text.main:0000000000000000 $t
     /tmp/ccfOqfDn.s:273    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
